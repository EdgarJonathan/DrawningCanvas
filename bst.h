#ifndef BST_H
#define BST_H
#include <matriz.h>

enum lol{

    INORDEN=0,
    PREORDEN =1,
    POSTORDEN=2

};
//********************************************************************************
//********************************************************************************
//************************ Clase nodo bst ****************************************
//********************************************************************************
//********************************************************************************
//********************************************************************************

class NodoBst
{

public:
    NodoBst(int id, matriz* capa);
    int id;
    matriz* capa;
    NodoBst* izq;
    NodoBst* der;
};

//********************************************************************************
//********************************************************************************
//************************ Clase BST *********************************************
//********************************************************************************
//********************************************************************************
//********************************************************************************
class bst
{

private:

    std::string txtgrafica;
    std::string id;
    std::string idIzq;
    std::string idDer;
    void inorden(NodoBst* temp);
    void postOrden(NodoBst* temp);
    void preOrden(NodoBst* temp);
    NodoBst* buscar(int id , NodoBst* raiz);
    void graficarPreorden();
    void graficarPreorden(NodoBst* raiz);
    void textoDot(std::string nombre);
    void add(int id, matriz* capa, NodoBst *&temp );
public:

    NodoBst* raiz;
    bst();
    void mostrar(int tipo);
    void add(int id , matriz * capa);
    NodoBst* buscar(int id);

    void graficar();

};


//********************************************************************************
//********************************************************************************
//************************ Clase BST *********************************************
//********************************************************************************
//********************************************************************************
//********************************************************************************

#endif // BST_H
